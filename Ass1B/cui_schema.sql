-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-05-01 13:21:54 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

set echo on
SPOOL cui_schema_output.txt

DROP TABLE authority CASCADE CONSTRAINTS;

DROP TABLE bin CASCADE CONSTRAINTS;

DROP TABLE bin_collection CASCADE CONSTRAINTS;

DROP TABLE bin_type CASCADE CONSTRAINTS;

DROP TABLE collection CASCADE CONSTRAINTS;

DROP TABLE con_bin_charge CASCADE CONSTRAINTS;

DROP TABLE con_wt_charge CASCADE CONSTRAINTS;

DROP TABLE contract CASCADE CONSTRAINTS;

DROP TABLE driver CASCADE CONSTRAINTS;

DROP TABLE driver_truck CASCADE CONSTRAINTS;

DROP TABLE owner CASCADE CONSTRAINTS;

DROP TABLE property CASCADE CONSTRAINTS;

DROP TABLE property_owner CASCADE CONSTRAINTS;

DROP TABLE street CASCADE CONSTRAINTS;

DROP TABLE truck CASCADE CONSTRAINTS;

DROP TABLE waste_type CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE authority (
    au_name        VARCHAR2(50) NOT NULL,
    au_ceo_givname VARCHAR2(30),
    au_ceo_famname VARCHAR2(30),
    au_contact_no  CHAR(10) NOT NULL,
    au_total_area  NUMBER(6, 2) NOT NULL,
    au_type        VARCHAR2(30) NOT NULL
);

ALTER TABLE authority
    ADD CONSTRAINT chk_au_type CHECK ( au_type IN ( 'B', 'C', 'DC', 'S', 'T' ) );

COMMENT ON COLUMN authority.au_name IS
    'Authority Name';

COMMENT ON COLUMN authority.au_ceo_givname IS
    'Authority CEO Given Name';

COMMENT ON COLUMN authority.au_ceo_famname IS
    'Authority CEO Family Name';

COMMENT ON COLUMN authority.au_contact_no IS
    'Authority Contact Number';

COMMENT ON COLUMN authority.au_total_area IS
    'Authority Total Area';

COMMENT ON COLUMN authority.au_type IS
    'Authority Type (B - Borough, C - City, D - District Council, S - Shire, T - Town)'
    ;

ALTER TABLE authority ADD CONSTRAINT authority_pk PRIMARY KEY ( au_name );

CREATE TABLE bin (
    bin_rfid               CHAR(16) NOT NULL,
    bin_supply_date        DATE NOT NULL,
    bin_replacement_reason VARCHAR2(30),
    bin_size               NUMBER(3) NOT NULL,
    prop_id                NUMBER(4) NOT NULL,
    waste_type_id          CHAR(2) NOT NULL
);

ALTER TABLE bin
    ADD CONSTRAINT chk_bin_replacement_reason CHECK ( bin_replacement_reason IN ( 'BF'
    , 'DO', 'DW', 'S' ) );

COMMENT ON COLUMN bin.bin_rfid IS
    'bin RFID';

COMMENT ON COLUMN bin.bin_supply_date IS
    'bin supply date';

COMMENT ON COLUMN bin.bin_replacement_reason IS
    'bin replacement reason (BF - bin failure, DO - damaged by owner, DW - damaged during waste pickup, S - Stolen) '
    ;

COMMENT ON COLUMN bin.bin_size IS
    'bin size ';

COMMENT ON COLUMN bin.prop_id IS
    'surrogate key of property';

COMMENT ON COLUMN bin.waste_type_id IS
    'waste type ID';

ALTER TABLE bin ADD CONSTRAINT bin_pk PRIMARY KEY ( bin_rfid );

CREATE TABLE bin_collection (
    bin_rfid              CHAR(16) NOT NULL,
    collection_no         NUMBER(3) NOT NULL,
    bin_collection_weight NUMBER(3, 2) NOT NULL,
    bin_overweight        CHAR(1) NOT NULL
);

ALTER TABLE bin_collection
    ADD CONSTRAINT chk_bin_overweight CHECK ( bin_overweight IN ( 'N', 'Y' ) );

COMMENT ON COLUMN bin_collection.bin_rfid IS
    'bin RFID';

COMMENT ON COLUMN bin_collection.collection_no IS
    'collection number';

COMMENT ON COLUMN bin_collection.bin_collection_weight IS
    'bin collection weight';

COMMENT ON COLUMN bin_collection.bin_overweight IS
    'if bin is overweight (Y/N)';

ALTER TABLE bin_collection ADD CONSTRAINT bin_collection_pk PRIMARY KEY ( bin_rfid,
                                                                          collection_no
                                                                          );

CREATE TABLE bin_type (
    bin_size          NUMBER(3) NOT NULL,
    waste_type_id     CHAR(2) NOT NULL,
    bin_standard_cost NUMBER(3, 2) NOT NULL
);

COMMENT ON COLUMN bin_type.bin_size IS
    'bin size ';

COMMENT ON COLUMN bin_type.waste_type_id IS
    'waste type ID';

COMMENT ON COLUMN bin_type.bin_standard_cost IS
    'bin standard cost';

ALTER TABLE bin_type ADD CONSTRAINT bin_type_pk PRIMARY KEY ( bin_size,
                                                              waste_type_id );

CREATE TABLE collection (
    collection_no   NUMBER(3) NOT NULL,
    collection_date DATE NOT NULL,
    contract_no     NUMBER(7) NOT NULL,
    waste_type_id   CHAR(2) NOT NULL,
    truck_vin       CHAR(17) NOT NULL,
    driver_no       NUMBER(4) NOT NULL
);

COMMENT ON COLUMN collection.collection_no IS
    'collection number';

COMMENT ON COLUMN collection.collection_date IS
    'collection date';

COMMENT ON COLUMN collection.contract_no IS
    'contract number';

COMMENT ON COLUMN collection.waste_type_id IS
    'waste type ID';

COMMENT ON COLUMN collection.truck_vin IS
    'truck vehicle identification number';

COMMENT ON COLUMN collection.driver_no IS
    'driver number';

ALTER TABLE collection ADD CONSTRAINT collection_pk PRIMARY KEY ( collection_no );

ALTER TABLE collection
    ADD CONSTRAINT collection_nk UNIQUE ( collection_date,
                                          contract_no,
                                          waste_type_id );

CREATE TABLE con_bin_charge (
    bin_charge_no   NUMBER(5) NOT NULL,
    contract_no     NUMBER(7) NOT NULL,
    bin_size        NUMBER(3) NOT NULL,
    waste_type_id   CHAR(2) NOT NULL,
    bin_supply_cost NUMBER(3, 2) NOT NULL
);

COMMENT ON COLUMN con_bin_charge.bin_charge_no IS
    'surrogate key of bin charge';

COMMENT ON COLUMN con_bin_charge.contract_no IS
    'contract number';

COMMENT ON COLUMN con_bin_charge.bin_size IS
    'bin size ';

COMMENT ON COLUMN con_bin_charge.waste_type_id IS
    'waste type ID';

COMMENT ON COLUMN con_bin_charge.bin_supply_cost IS
    'supply cost of bin';

ALTER TABLE con_bin_charge ADD CONSTRAINT con_bin_charge_pk PRIMARY KEY ( bin_charge_no
);

ALTER TABLE con_bin_charge
    ADD CONSTRAINT con_bin_charge_nk UNIQUE ( contract_no,
                                              bin_size,
                                              waste_type_id );

CREATE TABLE con_wt_charge (
    contract_no           NUMBER(7) NOT NULL,
    waste_type_id         CHAR(2) NOT NULL,
    waste_collection_cost NUMBER(3, 2) NOT NULL,
    waste_collection_freq VARCHAR2(11) NOT NULL
);

ALTER TABLE con_wt_charge
    ADD CONSTRAINT chk_waste_collection_freq CHECK ( waste_collection_freq IN ( 'F', 'M'
    , 'W' ) );

COMMENT ON COLUMN con_wt_charge.contract_no IS
    'contract number';

COMMENT ON COLUMN con_wt_charge.waste_type_id IS
    'waste type ID';

COMMENT ON COLUMN con_wt_charge.waste_collection_cost IS
    'waste collection cost';

COMMENT ON COLUMN con_wt_charge.waste_collection_freq IS
    'waste collection frequency (W - weekly, F - fortnightly, M - monthly)';

ALTER TABLE con_wt_charge ADD CONSTRAINT con_wt_charge_pk PRIMARY KEY ( contract_no,
                                                                        waste_type_id
                                                                        );

CREATE TABLE contract (
    contract_no         NUMBER(7) NOT NULL,
    contract_start_date DATE NOT NULL,
    contract_end_date   DATE NOT NULL,
    au_name             VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN contract.contract_no IS
    'contract number';

COMMENT ON COLUMN contract.contract_start_date IS
    'contract start date';

COMMENT ON COLUMN contract.contract_end_date IS
    'contract end date';

COMMENT ON COLUMN contract.au_name IS
    'Authority Name';

ALTER TABLE contract ADD CONSTRAINT contract_pk PRIMARY KEY ( contract_no );

CREATE TABLE driver (
    driver_no         NUMBER(4) NOT NULL,
    driver_licence_no CHAR(9) NOT NULL,
    driver_givname    VARCHAR2(30) NOT NULL,
    driver_famname    VARCHAR2(30) NOT NULL,
    driver_dob        DATE NOT NULL,
    driver_tfn        CHAR(9) NOT NULL,
    driver_contact    CHAR(10) NOT NULL
);

COMMENT ON COLUMN driver.driver_no IS
    'driver number';

COMMENT ON COLUMN driver.driver_licence_no IS
    'driver licence number';

COMMENT ON COLUMN driver.driver_givname IS
    'driver given name';

COMMENT ON COLUMN driver.driver_famname IS
    'driver family name';

COMMENT ON COLUMN driver.driver_dob IS
    'driver date of birth';

COMMENT ON COLUMN driver.driver_tfn IS
    'driver tax file number';

COMMENT ON COLUMN driver.driver_contact IS
    'driver contact number';

ALTER TABLE driver ADD CONSTRAINT driver_pk PRIMARY KEY ( driver_no );

CREATE TABLE driver_truck (
    truck_vin            CHAR(17) NOT NULL,
    driver_no            NUMBER(4) NOT NULL,
    driver_approval_date DATE NOT NULL
);

COMMENT ON COLUMN driver_truck.truck_vin IS
    'truck vehicle identification number';

COMMENT ON COLUMN driver_truck.driver_no IS
    'driver number';

COMMENT ON COLUMN driver_truck.driver_approval_date IS
    'driver approval date';

ALTER TABLE driver_truck ADD CONSTRAINT driver_truck_pk PRIMARY KEY ( truck_vin,
                                                                      driver_no );

CREATE TABLE owner (
    owner_id      NUMBER(7) NOT NULL,
    owner_givname VARCHAR2(30),
    owner_famname VARCHAR2(30),
    owner_email   VARCHAR2(50) NOT NULL,
    owner_phone   CHAR(10) NOT NULL
);

COMMENT ON COLUMN owner.owner_id IS
    'Owner ID';

COMMENT ON COLUMN owner.owner_givname IS
    'Owner Given Name';

COMMENT ON COLUMN owner.owner_famname IS
    'Owner Family Name';

COMMENT ON COLUMN owner.owner_email IS
    'Owner Email';

COMMENT ON COLUMN owner.owner_phone IS
    'Owner Phone Number';

ALTER TABLE owner ADD CONSTRAINT owner_pk PRIMARY KEY ( owner_id );

CREATE TABLE property (
    prop_id   NUMBER(4) NOT NULL,
    prop_no   NUMBER(4) NOT NULL,
    street_id NUMBER(4) NOT NULL,
    au_name   VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN property.prop_id IS
    'surrogate key of property';

COMMENT ON COLUMN property.prop_no IS
    'Property Number';

COMMENT ON COLUMN property.street_id IS
    'Street ID';

COMMENT ON COLUMN property.au_name IS
    'Authority Name';

ALTER TABLE property ADD CONSTRAINT property_pk PRIMARY KEY ( prop_id );

ALTER TABLE property
    ADD CONSTRAINT property_nk UNIQUE ( prop_no,
                                        street_id,
                                        au_name );

CREATE TABLE property_owner (
    owner_id NUMBER(7) NOT NULL,
    prop_id  NUMBER(4) NOT NULL
);

COMMENT ON COLUMN property_owner.owner_id IS
    'Owner ID';

COMMENT ON COLUMN property_owner.prop_id IS
    'surrogate key of property';

ALTER TABLE property_owner ADD CONSTRAINT property_owner_pk PRIMARY KEY ( owner_id,
                                                                          prop_id );

CREATE TABLE street (
    street_id        NUMBER(4) NOT NULL,
    au_name          VARCHAR2(50) NOT NULL,
    street_name      VARCHAR2(30) NOT NULL,
    street_length    NUMBER(6, 2) NOT NULL,
    street_road_type VARCHAR2(8) NOT NULL,
    street_lane_no   NUMBER(2) NOT NULL
);

ALTER TABLE street
    ADD CONSTRAINT chk_street_road_type CHECK ( street_road_type IN ( 'A', 'C', 'U' )
    );

COMMENT ON COLUMN street.street_id IS
    'Street ID';

COMMENT ON COLUMN street.au_name IS
    'Authority Name';

COMMENT ON COLUMN street.street_name IS
    'Street Name';

COMMENT ON COLUMN street.street_length IS
    'Street  Length';

COMMENT ON COLUMN street.street_road_type IS
    'Street Road Type (A - Asphalt, C - Concrete, U - Unsealed)';

COMMENT ON COLUMN street.street_lane_no IS
    'Street Lane Number';

ALTER TABLE street ADD CONSTRAINT street_pk PRIMARY KEY ( street_id,
                                                          au_name );

CREATE TABLE truck (
    truck_vin     CHAR(17) NOT NULL,
    truck_rego_no CHAR(9) NOT NULL,
    truck_make    VARCHAR2(20) NOT NULL,
    truck_model   VARCHAR2(20) NOT NULL,
    truck_year    NUMBER(4) NOT NULL
);

COMMENT ON COLUMN truck.truck_vin IS
    'truck vehicle identification number';

COMMENT ON COLUMN truck.truck_rego_no IS
    'truck registration number';

COMMENT ON COLUMN truck.truck_make IS
    'truck make';

COMMENT ON COLUMN truck.truck_model IS
    'truck model';

COMMENT ON COLUMN truck.truck_year IS
    'truck year of manufacture';

ALTER TABLE truck ADD CONSTRAINT truck_pk PRIMARY KEY ( truck_vin );

CREATE TABLE waste_type (
    waste_type_id   CHAR(2) NOT NULL,
    waste_type_desc VARCHAR2(50) NOT NULL
);

ALTER TABLE waste_type
    ADD CONSTRAINT chk_waste_type_desc CHECK ( waste_type_desc IN ( 'G', 'GW', 'L', 'SR'
    ) );

COMMENT ON COLUMN waste_type.waste_type_id IS
    'waste type ID';

COMMENT ON COLUMN waste_type.waste_type_desc IS
    'waste type description (GW - green waste, L - landfill, SR - standard recycle, G - glass)'
    ;

ALTER TABLE waste_type ADD CONSTRAINT waste_type_pk PRIMARY KEY ( waste_type_id );

ALTER TABLE contract
    ADD CONSTRAINT auth_con FOREIGN KEY ( au_name )
        REFERENCES authority ( au_name );

ALTER TABLE street
    ADD CONSTRAINT auth_street FOREIGN KEY ( au_name )
        REFERENCES authority ( au_name );

ALTER TABLE bin_collection
    ADD CONSTRAINT bin_collection FOREIGN KEY ( bin_rfid )
        REFERENCES bin ( bin_rfid );

ALTER TABLE bin
    ADD CONSTRAINT bintype_bin FOREIGN KEY ( bin_size,
                                             waste_type_id )
        REFERENCES bin_type ( bin_size,
                              waste_type_id );

ALTER TABLE con_bin_charge
    ADD CONSTRAINT bintype_bincharge FOREIGN KEY ( bin_size,
                                                   waste_type_id )
        REFERENCES bin_type ( bin_size,
                              waste_type_id );

ALTER TABLE bin_collection
    ADD CONSTRAINT collection_bin FOREIGN KEY ( collection_no )
        REFERENCES collection ( collection_no );

ALTER TABLE con_bin_charge
    ADD CONSTRAINT con_bincharge FOREIGN KEY ( contract_no )
        REFERENCES contract ( contract_no );

ALTER TABLE con_wt_charge
    ADD CONSTRAINT con_wastecharge FOREIGN KEY ( contract_no )
        REFERENCES contract ( contract_no );

ALTER TABLE driver_truck
    ADD CONSTRAINT driver_truck FOREIGN KEY ( driver_no )
        REFERENCES driver ( driver_no );

ALTER TABLE property_owner
    ADD CONSTRAINT owner_prop FOREIGN KEY ( owner_id )
        REFERENCES owner ( owner_id );

ALTER TABLE bin
    ADD CONSTRAINT prop_bin FOREIGN KEY ( prop_id )
        REFERENCES property ( prop_id );

ALTER TABLE property_owner
    ADD CONSTRAINT prop_owner FOREIGN KEY ( prop_id )
        REFERENCES property ( prop_id );

ALTER TABLE property
    ADD CONSTRAINT street_prop FOREIGN KEY ( street_id,
                                             au_name )
        REFERENCES street ( street_id,
                            au_name );

ALTER TABLE driver_truck
    ADD CONSTRAINT truck_driver FOREIGN KEY ( truck_vin )
        REFERENCES truck ( truck_vin );

ALTER TABLE collection
    ADD CONSTRAINT truckdriver_collection FOREIGN KEY ( truck_vin,
                                                        driver_no )
        REFERENCES driver_truck ( truck_vin,
                                  driver_no );

ALTER TABLE collection
    ADD CONSTRAINT waste_collection FOREIGN KEY ( contract_no,
                                                  waste_type_id )
        REFERENCES con_wt_charge ( contract_no,
                                   waste_type_id );

ALTER TABLE bin_type
    ADD CONSTRAINT wastetype_bintype FOREIGN KEY ( waste_type_id )
        REFERENCES waste_type ( waste_type_id );

ALTER TABLE con_wt_charge
    ADD CONSTRAINT wastetype_wastecharge FOREIGN KEY ( waste_type_id )
        REFERENCES waste_type ( waste_type_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             0
-- ALTER TABLE                             43
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off
set echo off
